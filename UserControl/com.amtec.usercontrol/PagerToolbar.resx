<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAACG
        BwAAAk1TRnQBSQFMAgEBBQEAAQkBAAEEAQABCgEAAQ0BAAT/AREBAAj/AUIBTQE2BwABNgMAASgDAAEo
        AwABGgMAAQEBAAEQBQABIAEIFAAB9QEQAZMBHQGTAR0BkwEdAZMBHQGTAR0BkwEdAZMBHQE5PQABtQEM
        AXkBLgHcATYB3AE2Ad0BNgHdATYB3AE2Ad0BNgHdATYBVgEdPAABcAEdAf0BPgH9AT4B/QE+Af0BPgH9
        AT4B/QE+Af0BPgH9AT4BNwEuPAABcAIdAUMBHQFDAR0BQwEdAUMBvAEhAR0BQwEdAUMBHQFDATcBLjwA
        AXACHQFDAR0BQwHdAT4BnQE6AVsBHQIAAd0BPgEdAUcBNwEyPAABcAEdAT0BSwE9AUsBOQEZBgABegEd
        AT0BSwFXATI8AAFwAR0BXQFPAV0BTwHYASUBWAEdAVgBHQIAAToBLgFdAU8BVwE2PAABcAEdAV0BUwFd
        AVMBPQFPAT0BSwG6AT4B+AEpAV0BTwFdAVMBdwE2PAABcAEdAX0BVwF9AVcBfQFXAX0BVwH7AUIBfQFX
        AX4BVwF9AVcBdwE6PAABcAEdAZ0BWwGeAVsBngFbAZ4BWwGeAVsBnQFbAZ4BWwGdAVsBdwE6PAABcAEd
        AZ4BWwGeAVsBngFbAZ0BWwGeAVsBngFbAZ4BWwGeAVsBdwE+PAABWAEEAdkBRgG+AWMBvgFjAb4BYwG+
        AWMBvgFjAb4BYwG+AWMBFQEZPgABtQEMAXABHQFwAR0BcAEdAXABHQFwAR0BcAEdAXABHT4AAb4BQgEy
        ARUOAAEyARUSAAEyARUBMgEVEgABMgEVDgABMgEVAb4BQgG+AUIBMgEVDAABfgIyARUQAAF+AjIBFQEy
        ARUBfgEyEAABMgEVAX4BMgwAATIBFQG+AUIBvgFCATIBFQoAAX4BMgGeAToBMgEVDgABfgEyAZ4BOgEy
        ARUBMgEVAZ4BOgF+ATIOAAEyARUBngE6AX4BMgoAATIBFQG+AUIBvgFCATIBFQgAAX4BMgGeAToBvgFC
        AVMBFQwAAX4BMgGeAToBvgFCAVMBFQFTARUBvgFCAZ4BOgF+ATIMAAFTARUBvgFCAZ4BOgF+ATIIAAEy
        ARUBvgFCAb4BQgEyARUGAAGeAToBngE6Ad4BRgH+AUoBdgEVCgABngE6AZ4BOgHeAUYB/gFKAXYBFQF2
        ARUB/gFKAd4BRgGeAToBngE6CgABdgEVAf4BSgHeAUYBngE6AZ4BOgYAATIBFQG+AUIBvgFCATIBFQQA
        AZ4BOgG+AUIB3gFGAf4BSgEfAVMBdgEVCAABngE6Ab4BQgHeAUYB/gFKAR8BUwF2ARUBdgEVAR8BUwH+
        AUoB3gFGAb4BQgGeAToIAAF2ARUBHwFTAf4BSgHeAUYBvgFCAZ4BOgQAATIBFQG+AUIBvgFCATIBFQIA
        AZ4BOgG+AUIB3gFGAf4BSgEfAVMBHwFTAZgBGQYAAZ4BOgG+AUIB3gFGAf4BSgEfAVMBHwFTAZgBGQGY
        ARkBHwFTAR8BUwH+AUoB3gFGAb4BQgGeAToGAAGYARkBHwFTAR8BUwH+AUoB3gFGAb4BQgGeAToCAAEy
        ARUBvgFCAb4BQgEyARUEAAG+AUIB3gFGAR8BUwE/AVsCXwGYARkIAAG+AUIB3gFGAR8BUwE/AVsCXwGY
        ARkBmAEZAl8BPwFbAR8BUwHeAUYBvgFCCAABmAEZAl8BPwFbAR8BUwHeAUYBvgFCBAABMgEVAb4BQgG+
        AUIBMgEVBgABHwFTAT8BWwJfAX8BYwGYARkKAAEfAVMBPwFbAl8BfwFjAZgBGQGYARkBfwFjAl8BPwFb
        AR8BUwoAAZgBGQF/AWMCXwE/AVsBHwFTBgABMgEVAb4BQgG+AUIBMgEVBgABMgEVAl8BfwFjAX8BYwG7
        ARkKAAEyARUCXwF/AWMBfwFjAbsBGQG7ARkBfwFjAX8BYwJfATIBFQoAAbsBGQF/AWMBfwFjAl8BMgEV
        BgABMgEVAb4BQgG+AUIBMgEVCAABMgEVAX8BYwF/AWMBuwEZDAABMgEVAX8BYwF/AWMBuwEZAbsBGQF/
        AWMBfwFjATIBFQwAAbsBGQF/AWMBfwFjATIBFQgAATIBFQG+AUIBvgFCATIBFQoAATIBFQF/AWMBuwEZ
        DgABMgEVAX8BYwG7ARkBuwEZAX8BYwEyARUOAAG7ARkBfwFjATIBFQoAATIBFQG+AUIBvgFCATIBFQwA
        ATIBFQG7ARkQAAEyARUBuwEZAbsBGQEyARUQAAG7ARkBMgEVDAABMgEVAb4CQgFNAT4HAAE+AwABKAMA
        ASgDAAEaAwABAQEAAQEFAAHQFwAD/wEAAYAfAAECBwABDgcAAQIvAAGAAUAGAAI/AcMC/AMAAT4BPwGB
        AfwBfAMAATwBPwEAAfwBPAMAATgBPgEAAXwBHAMAATABPAEAATwBDAMAASABOAEAARwBBAQAATABAAEM
        BAABIAE4AQABHAEEAwABMAE8AQABPAEMAwABOAE+AQABfAEcAwABPAE/AQAB/AE8AwABPgE/AYEB/AF8
        AwACPwHDAvwDAAs=
</value>
  </data>
</root>